<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="3495" started-at="2021-08-19T13:02:23Z" finished-at="2021-08-19T13:02:27Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="3495" started-at="2021-08-19T13:02:23Z" finished-at="2021-08-19T13:02:27Z">
      <class name="com.qa.tests.BaseTest">
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.tests.BaseTest@6e06451e]" name="setUp" is-config="true" duration-ms="532" started-at="2021-08-19T13:02:23Z" finished-at="2021-08-19T13:02:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getRequestUsers()[pri:1, instance:com.qa.tests.BaseTest@6e06451e]" name="getRequestUsers" duration-ms="2518" started-at="2021-08-19T13:02:24Z" finished-at="2021-08-19T13:02:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestUsers -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.tests.BaseTest@6e06451e]" name="setUp" is-config="true" duration-ms="0" started-at="2021-08-19T13:02:26Z" finished-at="2021-08-19T13:02:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getRequestSelectedUser()[pri:2, instance:com.qa.tests.BaseTest@6e06451e]" name="getRequestSelectedUser" duration-ms="198" started-at="2021-08-19T13:02:26Z" finished-at="2021-08-19T13:02:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestSelectedUser -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.tests.BaseTest@6e06451e]" name="setUp" is-config="true" duration-ms="0" started-at="2021-08-19T13:02:26Z" finished-at="2021-08-19T13:02:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="getRequestNoUserExist()[pri:3, instance:com.qa.tests.BaseTest@6e06451e]" name="getRequestNoUserExist" duration-ms="100" started-at="2021-08-19T13:02:26Z" finished-at="2021-08-19T13:02:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getRequestNoUserExist -->
        <test-method status="FAIL" signature="postRequest()[pri:4, instance:com.qa.tests.BaseTest@6e06451e]" name="postRequest" duration-ms="74" started-at="2021-08-19T13:02:26Z" finished-at="2021-08-19T13:02:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <201> but was <200>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <201> but was <200>.

at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:72)
at org.codehaus.groovy.reflection.CachedConstructor.doConstructorInvoke(CachedConstructor.java:59)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrap.callConstructor(ConstructorSite.java:84)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:59)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:493)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:674)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:193)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:61)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:126)
at io.restassured.specification.ResponseSpecification$statusCode$0.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:134)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at io.restassured.internal.ValidatableResponseImpl.super$2$statusCode(ValidatableResponseImpl.groovy)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.codehaus.groovy.reflection.CachedMethod.invoke(CachedMethod.java:107)
at groovy.lang.MetaMethod.doMethodInvoke(MetaMethod.java:323)
at groovy.lang.MetaClassImpl.invokeMethod(MetaClassImpl.java:1268)
at org.codehaus.groovy.runtime.ScriptBytecodeAdapter.invokeMethodOnSuperN(ScriptBytecodeAdapter.java:144)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy:142)
at io.restassured.internal.ValidatableResponseImpl.statusCode(ValidatableResponseImpl.groovy)
at com.qa.tests.BaseTest.postRequest(BaseTest.java:89)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- postRequest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.tests.BaseTest@6e06451e]" name="setUp" is-config="true" duration-ms="0" started-at="2021-08-19T13:02:26Z" finished-at="2021-08-19T13:02:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="putRequest()[pri:5, instance:com.qa.tests.BaseTest@6e06451e]" name="putRequest" duration-ms="30" started-at="2021-08-19T13:02:27Z" finished-at="2021-08-19T13:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- putRequest -->
        <test-method status="PASS" signature="setUp()[pri:0, instance:com.qa.tests.BaseTest@6e06451e]" name="setUp" is-config="true" duration-ms="0" started-at="2021-08-19T13:02:27Z" finished-at="2021-08-19T13:02:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
      </class> <!-- com.qa.tests.BaseTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
